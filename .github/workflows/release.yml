name: release
run-name: "${{ format('release {0}', inputs.bump) }}"

on:
  workflow_dispatch:
    inputs:
      bump:
        description: "Bump major, minor, or patch"
        required: true
        type: choice
        options:
          - major
          - minor
          - patch

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: ./.github/actions/setup-bun

      - name: Setup Git
        run: |
          git config --global user.email "bot@opencode.ai"
          git config --global user.name "opencode-web-bot"

      - name: Generate route tree
        run: bun x @tanstack/router-cli generate

      - name: Run tests
        run: bun run test

      - name: Run linting
        run: bun run lint

      - name: Type check
        run: bun x tsc --noEmit

      - name: Build NPM package
        env:
          OPENCODE_BUMP: ${{ inputs.bump }}
          OPENCODE_CHANNEL: latest
        run: bun ./script/build-npm.ts

      - name: Verify version synchronization
        id: version
        run: |
          ROOT_VERSION=$(jq -r '.version' package.json)
          PACKAGE_VERSION=$(jq -r '.version' packages/opencode-web/package.json)
          
          if [ "$ROOT_VERSION" != "$PACKAGE_VERSION" ]; then
            echo "ERROR: Version mismatch: root=$ROOT_VERSION, package=$PACKAGE_VERSION"
            exit 1
          fi
          
          echo "Version synchronization verified: $ROOT_VERSION"
          echo "version=$ROOT_VERSION" >> $GITHUB_OUTPUT

      - name: Update lockfiles
        run: |
          npm install --package-lock-only --legacy-peer-deps
          bun install

      - name: Commit release
        run: |
          git add -A
          git diff --quiet && git diff --staged --quiet || git commit -m "chore: release v${{ steps.version.outputs.version }}"

      - name: Create and push tag
        run: |
          git tag -a "v${{ steps.version.outputs.version }}" -m "Release v${{ steps.version.outputs.version }}"
          git push origin "v${{ steps.version.outputs.version }}"

      - name: Publish to NPM
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cd packages/opencode-web
          
          if [ -n "$NPM_TOKEN" ]; then
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
            echo "always-auth=true" >> ~/.npmrc
          fi
          
          npm publish --access public
          
          echo "Successfully published opencode-web@${{ steps.version.outputs.version }}"

      - name: Push commit
        run: git push origin HEAD:master
